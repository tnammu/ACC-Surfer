 
  Python RegEx 
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
  
  
   
   w3schools.com 
   
    THE WORLD'S LARGEST WEB DEVELOPER SITE
    
   
   
    
   
   
   
    
     
      
      
     HTML 
     CSS 
     JAVASCRIPT 
     SQL 
     PYTHON 
     PHP 
     BOOTSTRAP 
     HOW TO 
     W3.CSS 
     JQUERY 
     XML 
     MORE  
     ? 
     ? 
     ? 
     FORUM 
     EXERCISES  
     REFERENCES  
     
     
     ? 
      
       
       HTML and CSS 
       Learn HTML 
       Learn CSS 
       Learn Bootstrap 
       Learn W3.CSS 
       Learn Colors 
       Learn Icons 
       Learn Graphics 
       Learn SVG 
       Learn Canvas 
       Learn How To 
       Learn Sass 
        
        XML 
        Learn XML 
        Learn XML AJAX 
        Learn XML DOM 
        Learn XML DTD 
        Learn XML Schema 
        Learn XSLT 
        Learn XPath 
        Learn XQuery 
        
       
       
       JavaScript 
       Learn JavaScript 
       Learn jQuery 
       Learn React 
       Learn AngularJS 
       Learn JSON 
       Learn AJAX 
       Learn W3.JS 
       Programming 
       Learn Python 
       Learn Java 
       Learn C++ 
       Learn C# 
       
        
        
        
       
       
       Server Side 
       Learn SQL 
       Learn PHP 
       Learn ASP 
       Learn Node.js 
       Learn Raspberry Pi 
       Web Building 
       Web Templates 
       Web Statistics 
       Web Certificates 
       Web Editor 
       Web Development 
       
       
       XML 
       Learn XML 
       Learn XML AJAX 
       Learn XML DOM 
       Learn XML DTD 
       Learn XML Schema 
       Learn XSLT 
       Learn XPath 
       Learn XQuery 
       
      
      
     
     
     ? 
      
       
       HTML 
       HTML Tag Reference 
       HTML Event Reference 
       HTML Color Reference 
       HTML Attribute Reference 
       HTML Canvas Reference 
       HTML SVG Reference 
       HTML Character Sets 
       Google Maps Reference 
       CSS 
       CSS Reference 
       CSS Browser Support 
       CSS Selector Reference 
       Bootstrap 3 Reference 
       Bootstrap 4 Reference 
       W3.CSS Reference 
       Icon Reference 
       Sass Reference 
       
       
       JavaScript 
       JavaScript Reference 
       HTML DOM Reference 
       jQuery Reference 
       AngularJS Reference 
       W3.JS Reference 
       Programming 
       Python Reference 
       Java Reference 
       
       
       Server Side 
       SQL Reference 
       PHP Reference 
       ASP Reference 
       XML 
       XML Reference 
       XML Http Reference 
       XSLT Reference 
       XML Schema Reference 
       
       
       Character Sets 
       HTML Character Sets 
       HTML ASCII 
       HTML ANSI 
       HTML Windows-1252 
       HTML ISO-8859-1 
       HTML Symbols 
       HTML UTF-8 
       
      
      
     
     
     ? 
      
       
       Exercises 
       HTML Exercises 
       CSS Exercises 
       JavaScript Exercises 
       SQL Exercises 
       PHP Exercises 
       Python Exercises 
       jQuery Exercises 
       Bootstrap Exercises 
       Java Exercises 
       C++ Exercises 
       C# Exercises 
       
       
       Quizzes 
       HTML Quiz 
       CSS Quiz 
       JavaScript Quiz 
       SQL Quiz 
       PHP Quiz 
       Python Quiz 
       jQuery Quiz 
       Bootstrap Quiz 
       XML Quiz 
       
       
       Certificates 
       HTML Certificate 
       CSS Certificate 
       JavaScript Certificate 
       SQL Certificate 
       PHP Certificate 
       Python Certificate 
       jQuery Certificate 
       Bootstrap Certificate 
       XML Certificate 
       
      
      
     
    
   
   
    
     
      
     Python Tutorial 
     Python HOME 
     Python Intro 
     Python Get Started 
     Python Syntax 
     Python Comments 
     Python Variables 
     Python Data Types 
     Python Numbers 
      
     Python Casting 
     Python Strings 
     Python Booleans 
     Python Operators 
     Python Lists 
     Python Tuples 
     Python Sets 
     Python Dictionaries 
     Python If...Else 
     Python While Loops 
     Python For Loops 
      
     Python Functions 
     Python Lambda 
     Python Arrays 
     Python Classes/Objects 
     Python Inheritance 
     Python Iterators 
     Python Scope 
     Python Modules 
     Python Dates 
     Python JSON 
     Python RegEx 
     Python PIP 
     Python Try...Except 
     Python User Input 
     Python String Formatting 
      
     File Handling 
     Python File Handling 
     Python Read Files 
     Python Write/Create Files 
     Python Delete Files 
      
     Python MySQL 
     MySQL Get Started 
     MySQL Create Database 
     MySQL Create Table 
     MySQL Insert 
     MySQL Select 
     MySQL Where 
     MySQL Order By 
     MySQL Delete 
     MySQL Drop Table 
     MySQL Update 
     MySQL Limit 
     MySQL Join 
      
     Python MongoDB 
     MongoDB Get Started 
     MongoDB Create Database 
     MongoDB Create Collection 
     MongoDB Insert 
     MongoDB Find 
     MongoDB Query 
     MongoDB Sort 
     MongoDB Delete 
     MongoDB Drop Collection 
     MongoDB Update 
     MongoDB Limit 
      
      
     Python Reference 
     Python Overview 
     Python Built-in Functions 
     Python String Methods 
     Python List Methods 
     Python Dictionary Methods 
     Python Tuple Methods 
     Python Set Methods 
     Python File Methods 
     Python Keywords 
      
     Module Reference 
     Random Module 
     Requests Module 
      
     Python How To 
     Remove List Duplicates 
     Reverse a String 
      
     Python Examples 
     Python Examples 
     Python Exercises 
     Python Quiz 
     Python Certificate 
     
      
     
    
   
   
    
     
      
       
       
       
       
      
     Python RegEx 
      
      ? Previous 
      Next ? 
      
      
     A RegEx, or Regular Expression, is a sequence of characters that forms a search pattern. 
     RegEx can be used to check if a string contains the specified search pattern. 
      
     RegEx Module 
     Python has a built-in package called re, which can be used to work with Regular Expressions. 
     Import the re module: 
      
      
       import re
       
      
      
     RegEx in Python 
     When you have imported the re module, you can start using regular expressions: 
      
      Example 
      Search the string to see if it starts with "The" and ends with "Spain": 
      
        import re
       
       txt = "The rain in Spain"
       x = re.search("^The.*Spain$", txt)
       
      Run example ? 
      
      
     RegEx Functions 
     The re module offers a set of functions that allows us to search a string for a match: 
      
      
        
        Function 
        Description 
        
        
        findall 
        Returns a list containing all matches 
        
        
        search 
        Returns a Match object if there is a match anywhere in the string 
        
        
        split 
        Returns a list where the string has been split at each match  
        
        
        sub 
        Replaces one or many matches with a string 
        
      
      
      
      
       
       
       
      
      
     Metacharacters 
     Metacharacters are characters with a special meaning: 
      
      
        
        Character 
        Description 
        Example 
        Try it 
        
        
        [] 
        A set of characters 
        "[a-m]" 
        Try it ? 
        
        
        \ 
        Signals a special sequence (can also be used to escape special characters) 
        "\d" 
        Try it ? 
        
        
        . 
        Any character (except newline character) 
        "he..o" 
        Try it ? 
        
        
        ^ 
        Starts with 
        "^hello" 
        Try it ? 
        
        
        $ 
        Ends with 
        "world$" 
        Try it ? 
        
        
        * 
        Zero or more occurrences 
        "aix*" 
        Try it ? 
        
        
        + 
        One or more occurrences 
        "aix+" 
        Try it ? 
        
        
        {} 
        Exactly the specified number of occurrences 
        "al{2}" 
        Try it ? 
        
        
        | 
        Either or 
        "falls|stays" 
        Try it ? 
        
        
        () 
        Capture and group 
          
          
        
      
      
      
     Special Sequences 
     A special sequence is a \ followed by one of the characters in the list below, and has a special meaning: 
      
      
        
        Character 
        Description 
        Example 
        Try it 
        
        
        \A 
        Returns a match if the specified characters are at the beginning of the string 
        "\AThe" 
        Try it ? 
        
        
        \b 
        Returns a match where the specified characters are at the beginning or at the end of a word 
        r"\bain"r"ain\b" 
        Try it ? Try it ? 
        
        
        \B 
        Returns a match where the specified characters are present, but NOT at the beginning (or at the end) of a word 
        r"\Bain"r"ain\B" 
        Try it ? Try it ? 
        
        
        \d 
        Returns a match where the string contains digits (numbers from 0-9) 
        "\d" 
        Try it ? 
        
        
        \D 
        Returns a match where the string DOES NOT contain digits 
        "\D" 
        Try it ? 
        
        
        \s 
        Returns a match where the string contains a white space character 
        "\s" 
        Try it ? 
        
        
        \S 
        Returns a match where the string DOES NOT contain a white space character 
        "\S" 
        Try it ? 
        
        
        \w 
        Returns a match where the string contains any word characters (characters from a to Z, digits from 0-9, and the underscore _ character) 
        "\w" 
        Try it ? 
        
        
        \W 
        Returns a match where the string DOES NOT contain any word characters 
        "\W" 
        Try it ? 
        
        
        \Z 
        Returns a match if the specified characters are at the end of the string 
        "Spain\Z" 
        Try it ? 
        
      
      
      
     Sets 
     A set is a set of characters inside a pair of square brackets  [] with a special meaning: 
      
      
        
        Set 
        Description 
        Try it 
        
        
        [arn] 
        Returns a match where one of the specified characters (a, r, or n) are present 
        Try it ? 
        
        
        [a-n] 
        Returns a match for any lower case character, alphabetically between a and n 
        Try it ? 
        
        
        [^arn] 
        Returns a match for any character EXCEPT a, r, and n 
        Try it ? 
        
        
        [0123] 
        Returns a match where any of the specified digits (0, 1, 2, or  3) are present 
        Try it ? 
        
        
        [0-9] 
        Returns a match for any digit between 0 and 9 
        Try it ? 
        
        
        [0-5][0-9] 
        Returns a match for any two-digit numbers from 00 and  59 
        Try it ? 
        
        
        [a-zA-Z] 
        Returns a match for any character alphabetically between a and z, lower case OR upper case 
        Try it ? 
        
        
        [+] 
        In sets, +, *, ., |, (), $,{} has no special meaning, so [+] means: return a match for any + character in the string 
        Try it ? 
        
      
      
      
     
       
      
     The findall() Function 
     The findall() function returns a list containing all matches. 
      
      Example 
      Print a list of all matches: 
      
        import re
       
       str = "The rain in Spain"
       x = re.findall("ai", str)
        print(x)
       
      Run example ? 
      
     The list contains the matches in the order they are found. 
     If no matches are found, an empty list is returned: 
      
      Example 
      Return an empty list if no match was found: 
      
        import re
       
       str = "The rain in Spain"
       x = re.findall("Portugal", str)
        print(x)
       
      Run example ? 
      
      
     
       
      
     The search() Function 
     The search() function searches the string for a match, and returns a Match object if there is a match. 
     If there is more than one match, only the first occurrence of the match will be returned: 
      
      Example 
      Search for the first white-space character in the string: 
      
        import re
       
       str = "The rain in Spain"
       x = re.search("\s", str)
        
       print("The first white-space character is located in position:", x.start()) 
       
      Run example ? 
      
     If no matches are found, the value None is returned: 
      
      Example 
      Make a search that returns no match: 
      
        import re
       
       str = "The rain in Spain"
       x = re.search("Portugal", str)
        print(x)
       
      Run example ? 
      
      
     
       
      
     The split() Function 
     The split() function returns a list where the string has been split at each match: 
      
      Example 
      Split at each white-space character: 
      
        import re
       
       str = "The rain in Spain"
       x = re.split("\s", str)
        print(x)
       
      Run example ? 
      
     You can control the number of occurrences by specifying the maxsplit parameter: 
      
      Example 
      Split the string only at the first occurrence: 
      
        import re
       
       str = "The rain in Spain"
       x = re.split("\s", str, 1)
        print(x)
       
      Run example ? 
      
      
     
       
      
     The sub() Function 
     The sub() function replaces the matches with the text of your choice: 
      
      Example 
      Replace every white-space character with the number 9: 
      
        import re
       
       str = "The rain in Spain"
       x = re.sub("\s", "9", str)
        print(x)
       
      Run example ? 
      
     You can control the number of replacements by specifying the count parameter: 
      
      Example 
      Replace the first 2 occurrences: 
      
        import re
       
       str = "The rain in Spain"
       x = re.sub("\s", "9", str, 2)
        print(x)
       
      Run example ? 
      
      
     
       
      
     Match Object 
     A Match Object is an object containing information about the search and the result. 
      
      Note: If there is no match, the value None will be returned, instead of the Match Object. 
      
      
      Example 
      Do a search that will return a Match Object: 
      
        import re
       
       str = "The rain in Spain"
       x = re.search("ai", str)
        print(x) #this will print an object
       
      Run example ? 
      
     The Match object has properties and methods used to retrieve information about the search, and the result: 
      .span() returns a tuple containing the start-, and end positions of the match. .string returns the string passed into the function .group() returns the part of the string where there was a match  
      
      Example 
      Print the position (start- and end-position) of the first match occurrence. 
      The regular expression looks for any words that starts with an upper case "S": 
      
        import re
       
        str = "The rain in Spain"
        x = re.search(r"\bS\w+", str)
        print(
       x.span())
       
      Run example ? 
      
      
      Example 
      Print the string passed into the function: 
      
        import re
       
        str = "The rain in Spain"
        x = re.search(r"\bS\w+", str)
        print(
       x.string)
       
      Run example ? 
      
      
      Example 
      Print the part of the string where there was a match. 
      The regular expression looks for any words that starts with an upper case "S": 
      
        import re
       
        str = "The rain in Spain"
        x = re.search(r"\bS\w+", str)
        print(
       x.group())
       
      Run example ? 
      
      
      Note: If there is no match, the value None will be returned, instead of the Match Object. 
      
      
      
      ? Previous 
      Next ? 
      
     
     
      
       
        
        
        
       
      
      
      COLOR PICKER 
        
      
      
      
      
      
       
       HOW TO 
       
       
       Tabs
        
       Dropdowns
        
       Accordions
        
       Side Navigation
        
       Top Navigation
        
       Modal Boxes
        
       Progress Bars
        
       Parallax
        
       Login Form
        
       HTML Includes
        
       Google Maps
        
       Range Sliders
        
       Tooltips
        
       Slideshow
        
       Filter List
        
       Sort List
        
       
      
      
      SHARE 
       
        
       
        
         
        
         
        
       
      
      
      CERTIFICATES 
       HTML CSS JavaScript SQL Python PHP jQuery Bootstrap XML 
       Read More ? 
      
      
       
        
         
         
         
        
       
      
      
     
    
    
     
     
      
       
       
       
       
       
       
       
      
     
     
     
      
      REPORT ERROR 
      
      
      PRINT PAGE 
      
      
      FORUM 
      
      
      ABOUT 
      
     
     
     
     ? 
     Your Suggestion: 
      
       
       Your E-mail: 
        
       
       
       Page address: 
        
       
       
       Description: 
        
       
       
       Submit 
       
       
      
     
     
     ? 
     Thank You For Helping Us! 
     Your message has been sent to W3Schools. 
     
     
      
       
       Top Tutorials 
       HTML Tutorial
        
       CSS Tutorial
        
       JavaScript Tutorial
        
       How To Tutorial
        
       SQL Tutorial
        
       Python Tutorial
        
       W3.CSS Tutorial
        
       Bootstrap Tutorial
        
       PHP Tutorial
        
       jQuery Tutorial
        
       Java Tutorial
        
       C++ Tutorial
        
       
      
      
       
       Top References 
       HTML Reference
        
       CSS Reference
        
       JavaScript Reference
        
       SQL Reference
        
       Python Reference
        
       W3.CSS Reference
        
       Bootstrap Reference
        
       PHP Reference
        
       HTML Colors
        
       jQuery Reference
        
       Java Reference
        
       Angular Reference
        
       
      
      
       
       Top Examples 
       HTML Examples
        
       CSS Examples
        
       JavaScript Examples
        
       How To Examples
        
       SQL Examples
        
       Python Examples
        
       W3.CSS Examples
        
       Bootstrap Examples
        
       PHP Examples
        
       jQuery Examples
        
       Java Examples
        
       XML Examples
        
       
      
      
       
       Web Certificates 
       HTML Certificate
        
       CSS Certificate
        
       JavaScript Certificate
        
       SQL Certificate
        
       Python Certificate
        
       jQuery Certificate
        
       PHP Certificate
        
       Bootstrap Certificate
        
       XML Certificate
        
        Get Certified ? 
       
      
     
     
    
      W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our 
     terms of use, 
     cookie and privacy policy. 
     Copyright 1999-2019 by Refsnes Data. All Rights Reserved.
      
     Powered by W3.CSS.
     
      
       
     
    
     
    
   
   
   
    
 


