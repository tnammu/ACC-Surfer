 
  C# Strings 
   
   
   
   
   
   
   
  
   
   
   
   
   
   
   
   
   
   
   
  
  
   
   w3schools.com 
   
    THE WORLD'S LARGEST WEB DEVELOPER SITE
    
   
   
    
   
   
   
    
     
      
      
     HTML 
     CSS 
     JAVASCRIPT 
     SQL 
     PYTHON 
     PHP 
     BOOTSTRAP 
     HOW TO 
     W3.CSS 
     JQUERY 
     XML 
     MORE  
     ? 
     ? 
     ? 
     FORUM 
     EXERCISES  
     REFERENCES  
     
     
     ? 
      
       
       HTML and CSS 
       Learn HTML 
       Learn CSS 
       Learn Bootstrap 
       Learn W3.CSS 
       Learn Colors 
       Learn Icons 
       Learn Graphics 
       Learn SVG 
       Learn Canvas 
       Learn How To 
       Learn Sass 
        
        XML 
        Learn XML 
        Learn XML AJAX 
        Learn XML DOM 
        Learn XML DTD 
        Learn XML Schema 
        Learn XSLT 
        Learn XPath 
        Learn XQuery 
        
       
       
       JavaScript 
       Learn JavaScript 
       Learn jQuery 
       Learn React 
       Learn AngularJS 
       Learn JSON 
       Learn AJAX 
       Learn W3.JS 
       Programming 
       Learn Python 
       Learn Java 
       Learn C++ 
       Learn C# 
       
        
        
        
       
       
       Server Side 
       Learn SQL 
       Learn PHP 
       Learn ASP 
       Learn Node.js 
       Learn Raspberry Pi 
       Web Building 
       Web Templates 
       Web Statistics 
       Web Certificates 
       Web Editor 
       Web Development 
       
       
       XML 
       Learn XML 
       Learn XML AJAX 
       Learn XML DOM 
       Learn XML DTD 
       Learn XML Schema 
       Learn XSLT 
       Learn XPath 
       Learn XQuery 
       
      
      
     
     
     ? 
      
       
       HTML 
       HTML Tag Reference 
       HTML Event Reference 
       HTML Color Reference 
       HTML Attribute Reference 
       HTML Canvas Reference 
       HTML SVG Reference 
       HTML Character Sets 
       Google Maps Reference 
       CSS 
       CSS Reference 
       CSS Browser Support 
       CSS Selector Reference 
       Bootstrap 3 Reference 
       Bootstrap 4 Reference 
       W3.CSS Reference 
       Icon Reference 
       Sass Reference 
       
       
       JavaScript 
       JavaScript Reference 
       HTML DOM Reference 
       jQuery Reference 
       AngularJS Reference 
       W3.JS Reference 
       Programming 
       Python Reference 
       Java Reference 
       
       
       Server Side 
       SQL Reference 
       PHP Reference 
       ASP Reference 
       XML 
       XML Reference 
       XML Http Reference 
       XSLT Reference 
       XML Schema Reference 
       
       
       Character Sets 
       HTML Character Sets 
       HTML ASCII 
       HTML ANSI 
       HTML Windows-1252 
       HTML ISO-8859-1 
       HTML Symbols 
       HTML UTF-8 
       
      
      
     
     
     ? 
      
       
       Exercises 
       HTML Exercises 
       CSS Exercises 
       JavaScript Exercises 
       SQL Exercises 
       PHP Exercises 
       Python Exercises 
       jQuery Exercises 
       Bootstrap Exercises 
       Java Exercises 
       C++ Exercises 
       C# Exercises 
       
       
       Quizzes 
       HTML Quiz 
       CSS Quiz 
       JavaScript Quiz 
       SQL Quiz 
       PHP Quiz 
       Python Quiz 
       jQuery Quiz 
       Bootstrap Quiz 
       XML Quiz 
       
       
       Certificates 
       HTML Certificate 
       CSS Certificate 
       JavaScript Certificate 
       SQL Certificate 
       PHP Certificate 
       Python Certificate 
       jQuery Certificate 
       Bootstrap Certificate 
       XML Certificate 
       
      
      
     
    
   
   
    
     
      
     C# Tutorial 
     C# HOME 
     C# Intro 
     C# Get Started 
     C# Syntax 
     C# Comments 
     C# Variables 
     C# Data Types 
     C# Type Casting 
     C# User Input 
     C# Operators 
     C# Math 
     C# Strings 
     C# Booleans 
     C# If...Else 
     C# Switch 
     C# While Loop 
     C# For Loop 
     C# Break/Continue 
     C# Arrays 
      
     C# Methods 
     C# Methods 
     C# Method Parameters 
     C# Method Overloading 
      
     C# Classes 
     C# OOP 
     C# Classes/Objects 
     C# Class Members 
     C# Constructors 
     C# Access Modifiers 
     C# Properties 
     C# Inheritance 
     C# Polymorphism 
     C# Abstraction 
     C# Interface 
     C# Enums 
     C# Files 
     C# Exceptions 
      
     C# Examples 
     C# Examples 
     C# Exercises 
      
     
      
     
    
   
   
    
     
      
       
       
       
       
      
     C# Strings 
      
      ? Previous 
      Next ? 
      
      
     C# Strings 
     Strings are used for storing text. 
     A string variable contains a collection of characters surrounded by double quotes: 
      
      Example 
      Create a variable of type string and assign it a value: 
      string greeting = "Hello";
 
       Run example ?  
      
      
     String Length 
     A string in C# is actually an object, which contain properties and methods that can perform certain operations on strings. For example, the length of a string can be found with the Length property: 
      
      Example 
      string txt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
Console.WriteLine("The length of the txt string is: " + txt.Length);
 
       Run example ?  
      
      
     Other Methods 
     There are many string methods available, for example ToUpper() and ToLower(), which returns a copy of the string converted to uppercase or lowercase: 
      
      Example 
      string txt = "Hello World";
Console.WriteLine(txt.ToUpper());   // Outputs "HELLO WORLD"
Console.WriteLine(txt.ToLower());   // Outputs "hello world"
 
       Run example ?  
      
      
      
     String Concatenation 
     The + operator can be used between strings to combine them. This is called concatenation: 
      
      Example 
      string firstName = "John ";
string lastName = "Doe";
string name = firstName + lastName;
Console.WriteLine(name);
 
       Run example ?  
      
     
      Note that we have added a space after "John" to create a space between firstName and lastName on print.
      
     You can also use the string.Concat() method to concatenate two strings: 
      
      Example 
      string firstName = "John ";
string lastName = "Doe";
string name = string.Concat(firstName, lastName);
Console.WriteLine(name);
 
       Run example ?  
      
      
      
       
       
       
      
      
     String Interpolation 
     Another option of string concatenation, is string interpolation, which substitutes values of variables into placeholders in a string. Note that you do not have to worry about spaces, like with concatenation: 
      
      Example 
      string firstName = "John";
string lastName = "Doe";
string name = $"My full name is: {firstName} {lastName}";
Console.WriteLine(name);
 
       Run example ?  
      
      
      Also note that you have to use the dollar sign ($) when using the string interpolation method. 
      String interpolation was introduced in C# version 6. 
      
      
     Access Strings 
     You can access the characters in a string by referring to its index number inside square brackets []. 
     This example prints the first character in myString: 
      
      Example 
      string myString = "Hello";
Console.WriteLine(myString[0]);  // Outputs "H"
 
       Run example ?  
      
      
      Note: String indexes start with 0: [0] is the first character. [1] is the second character, etc. 
      
     This example prints the second character (1) in myString: 
      
      Example 
      string myString = "Hello";
Console.WriteLine(myString[1]);  // Outputs "e"
 
       Run example ?  
      
     You can also find the index position of a specific character in a string, by using the IndexOf() method: 
      
      Example 
      string myString = "Hello";
Console.WriteLine(myString.IndexOf("e"));  // Outputs "1"
 
       Run example ?  
      
     Another useful method is Substring(), which extracts the characters from a string, starting from the specified character position/index, and returns a new string. This method is often used together with IndexOf() to get the specific character position: 
      
      Example 
      // Full name
string name = "John Doe";

// Location of the letter D
int charPos = name.IndexOf("D");

// Get last name
string lastName = name.Substring(charPos);

// Print the result
Console.WriteLine(lastName);
 
       Run example ?  
      
      
     Special Characters 
     Because strings must be written within quotes, C# will misunderstand this string, and generate an error: 
      
      string txt = "We are the so-called "Vikings" from the north.";
 
      
     The solution to avoid this problem, is to use the backslash escape character. 
     The backslash (\) escape character turns special characters into string characters: 
      
      
        
        Escape character 
        Result 
        Description 
        
        
        \' 
        ' 
        Single quote 
        
        
        \" 
        " 
        Double quote 
        
        
        \\ 
        \ 
        Backslash 
        
      
      
     The sequence \"  inserts a double quote in a string:
      
      
      Example 
      string txt = "We are the so-called \"Vikings\" from the north.";
 
       Try it Yourself ?  
      
     The sequence \'  inserts a single quote in a string:
      
      
      Example 
      string txt = "It\'s alright.";
 
       Try it Yourself ?  
      
     The sequence \\  inserts a single backslash in a string:
      
      
      Example 
      string txt = "The character \\ is called backslash.";
 
       Try it Yourself ?  
      
     Other useful escape characters in C# are: 
      
      
        
        Code 
        Result 
        Try it 
        
        
        \n 
        New Line 
        Try it ? 
        
        
        \t 
        Tab 
        Try it ? 
        
        
        \b 
        Backspace 
        Try it ? 
        
      
      
      
     Adding Numbers and Strings 
      
      WARNING! 
      C# uses the + operator for both addition and concatenation. 
      Remember: Numbers are added. Strings are concatenated. 
      
     If you add two numbers, the result will be a number: 
      
      Example 
      int x = 10;
int y = 20;
int z = x + y;  // z will be 30 (an integer/number)
 
       Run example ?  
      
     If you add two strings, the result will be a string concatenation: 
      
      Example 
      string x = "10";
string y = "20";
string z = x + y;  // z will be 1020 (a string)
 
       Run example ?  
      
      
      
      
      C# Exercises 
       
       Test Yourself With Exercises 
        
        Exercise: 
        Fill in the missing part to create a greeting variable of type string and assign it the value Hello. 
         
         
  = ;
 
         
         
        Submit Answer ? 
        Start the Exercise 
        
       
      
      
      
      ? Previous 
      Next ? 
      
     
     
      
       
        
        
        
       
      
      
      COLOR PICKER 
        
      
      
      
      
      
       
       HOW TO 
       
       
       Tabs
        
       Dropdowns
        
       Accordions
        
       Side Navigation
        
       Top Navigation
        
       Modal Boxes
        
       Progress Bars
        
       Parallax
        
       Login Form
        
       HTML Includes
        
       Google Maps
        
       Range Sliders
        
       Tooltips
        
       Slideshow
        
       Filter List
        
       Sort List
        
       
      
      
      SHARE 
       
        
       
        
         
        
         
        
       
      
      
      CERTIFICATES 
       HTML CSS JavaScript SQL Python PHP jQuery Bootstrap XML 
       Read More ? 
      
      
       
        
         
         
         
        
       
      
      
     
    
    
     
     
      
       
       
       
       
       
       
       
      
     
     
     
      
      REPORT ERROR 
      
      
      PRINT PAGE 
      
      
      FORUM 
      
      
      ABOUT 
      
     
     
     
     ? 
     Your Suggestion: 
      
       
       Your E-mail: 
        
       
       
       Page address: 
        
       
       
       Description: 
        
       
       
       Submit 
       
       
      
     
     
     ? 
     Thank You For Helping Us! 
     Your message has been sent to W3Schools. 
     
     
      
       
       Top Tutorials 
       HTML Tutorial
        
       CSS Tutorial
        
       JavaScript Tutorial
        
       How To Tutorial
        
       SQL Tutorial
        
       Python Tutorial
        
       W3.CSS Tutorial
        
       Bootstrap Tutorial
        
       PHP Tutorial
        
       jQuery Tutorial
        
       Java Tutorial
        
       C++ Tutorial
        
       
      
      
       
       Top References 
       HTML Reference
        
       CSS Reference
        
       JavaScript Reference
        
       SQL Reference
        
       Python Reference
        
       W3.CSS Reference
        
       Bootstrap Reference
        
       PHP Reference
        
       HTML Colors
        
       jQuery Reference
        
       Java Reference
        
       Angular Reference
        
       
      
      
       
       Top Examples 
       HTML Examples
        
       CSS Examples
        
       JavaScript Examples
        
       How To Examples
        
       SQL Examples
        
       Python Examples
        
       W3.CSS Examples
        
       Bootstrap Examples
        
       PHP Examples
        
       jQuery Examples
        
       Java Examples
        
       XML Examples
        
       
      
      
       
       Web Certificates 
       HTML Certificate
        
       CSS Certificate
        
       JavaScript Certificate
        
       SQL Certificate
        
       Python Certificate
        
       jQuery Certificate
        
       PHP Certificate
        
       Bootstrap Certificate
        
       XML Certificate
        
        Get Certified ? 
       
      
     
     
    
      W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our 
     terms of use, 
     cookie and privacy policy. 
     Copyright 1999-2019 by Refsnes Data. All Rights Reserved.
      
     Powered by W3.CSS.
     
      
       
     
    
     
    
   
   
   
    
 


