 
  JavaScript Bitwise 
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
 
  
   
   w3schools.com 
   
    THE WORLD'S LARGEST WEB DEVELOPER SITE
    
   
   
    
   
   
   
    
     
      
      
     HTML 
     CSS 
     JAVASCRIPT 
     SQL 
     PYTHON 
     PHP 
     BOOTSTRAP 
     HOW TO 
     W3.CSS 
     JQUERY 
     XML 
     MORE  
     ? 
     ? 
     ? 
     FORUM 
     EXERCISES  
     REFERENCES  
     
     
     ? 
      
       
       HTML and CSS 
       Learn HTML 
       Learn CSS 
       Learn Bootstrap 
       Learn W3.CSS 
       Learn Colors 
       Learn Icons 
       Learn Graphics 
       Learn SVG 
       Learn Canvas 
       Learn How To 
       Learn Sass 
        
        XML 
        Learn XML 
        Learn XML AJAX 
        Learn XML DOM 
        Learn XML DTD 
        Learn XML Schema 
        Learn XSLT 
        Learn XPath 
        Learn XQuery 
        
       
       
       JavaScript 
       Learn JavaScript 
       Learn jQuery 
       Learn React 
       Learn AngularJS 
       Learn JSON 
       Learn AJAX 
       Learn W3.JS 
       Programming 
       Learn Python 
       Learn Java 
       Learn C++ 
       Learn C# 
       
        
        
        
       
       
       Server Side 
       Learn SQL 
       Learn PHP 
       Learn ASP 
       Learn Node.js 
       Learn Raspberry Pi 
       Web Building 
       Web Templates 
       Web Statistics 
       Web Certificates 
       Web Editor 
       Web Development 
       
       
       XML 
       Learn XML 
       Learn XML AJAX 
       Learn XML DOM 
       Learn XML DTD 
       Learn XML Schema 
       Learn XSLT 
       Learn XPath 
       Learn XQuery 
       
      
      
     
     
     ? 
      
       
       HTML 
       HTML Tag Reference 
       HTML Event Reference 
       HTML Color Reference 
       HTML Attribute Reference 
       HTML Canvas Reference 
       HTML SVG Reference 
       HTML Character Sets 
       Google Maps Reference 
       CSS 
       CSS Reference 
       CSS Browser Support 
       CSS Selector Reference 
       Bootstrap 3 Reference 
       Bootstrap 4 Reference 
       W3.CSS Reference 
       Icon Reference 
       Sass Reference 
       
       
       JavaScript 
       JavaScript Reference 
       HTML DOM Reference 
       jQuery Reference 
       AngularJS Reference 
       W3.JS Reference 
       Programming 
       Python Reference 
       Java Reference 
       
       
       Server Side 
       SQL Reference 
       PHP Reference 
       ASP Reference 
       XML 
       XML Reference 
       XML Http Reference 
       XSLT Reference 
       XML Schema Reference 
       
       
       Character Sets 
       HTML Character Sets 
       HTML ASCII 
       HTML ANSI 
       HTML Windows-1252 
       HTML ISO-8859-1 
       HTML Symbols 
       HTML UTF-8 
       
      
      
     
     
     ? 
      
       
       Exercises 
       HTML Exercises 
       CSS Exercises 
       JavaScript Exercises 
       SQL Exercises 
       PHP Exercises 
       Python Exercises 
       jQuery Exercises 
       Bootstrap Exercises 
       Java Exercises 
       C++ Exercises 
       C# Exercises 
       
       
       Quizzes 
       HTML Quiz 
       CSS Quiz 
       JavaScript Quiz 
       SQL Quiz 
       PHP Quiz 
       Python Quiz 
       jQuery Quiz 
       Bootstrap Quiz 
       XML Quiz 
       
       
       Certificates 
       HTML Certificate 
       CSS Certificate 
       JavaScript Certificate 
       SQL Certificate 
       PHP Certificate 
       Python Certificate 
       jQuery Certificate 
       Bootstrap Certificate 
       XML Certificate 
       
      
      
     
    
   
   
    
     
      
     JS Tutorial 
     JS HOME 
     JS Introduction 
     JS Where To 
     JS Output 
     JS Statements 
     JS Syntax 
     JS Comments 
     JS Variables 
     JS Operators 
     JS Arithmetic 
     JS Assignment 
     JS Data Types 
     JS Functions 
     JS Objects 
     JS Events 
     JS Strings 
     JS String Methods 
     JS Numbers 
     JS Number Methods 
     JS Arrays 
     JS Array Methods 
     JS Array Sort 
     JS Array Iteration 
     JS Dates 
     JS Date Formats 
     JS Date Get Methods 
     JS Date Set Methods 
     JS Math 
     JS Random 
     JS Booleans 
     JS Comparisons 
     JS Conditions 
     JS Switch 
     JS Loop For 
     JS Loop While 
     JS Break 
     JS Type Conversion 
     JS Bitwise 
     JS RegExp 
     JS Errors 
     JS Scope 
     JS Hoisting 
     JS Strict Mode 
     JS this Keyword 
     JS Let 
     JS Const 
     JS Arrow Function 
     JS Classes 
     JS Debugging 
     JS Style Guide 
     JS Best Practices 
     JS Mistakes 
     JS Performance 
     JS Reserved Words 
     JS Versions 
     JS Version ES5 
     JS Version ES6 
     JS JSON 
      
     JS Forms 
     JS Forms 
     Forms API 
      
     JS Objects 
     Object Definitions 
     Object Properties 
     Object Methods 
     Object Accessors 
     Object Constructors 
     Object Prototypes 
     Object ECMAScript 5 
      
     JS Functions 
     Function Definitions 
     Function Parameters 
     Function Invocation 
     Function Call 
     Function Apply 
     Function Closures 
      
     JS HTML DOM 
     DOM Intro 
     DOM Methods 
     DOM Document 
     DOM Elements 
     DOM HTML 
     DOM CSS 
     DOM Animations 
     DOM Events 
     DOM Event Listener 
     DOM Navigation 
     DOM Nodes 
     DOM Collections 
     DOM Node Lists 
      
     JS Browser BOM 
     JS Window 
     JS Screen 
     JS Location 
     JS History 
     JS Navigator 
     JS Popup Alert 
     JS Timing 
     JS Cookies 
      
     JS AJAX 
     AJAX Intro 
     AJAX XMLHttp 
     AJAX Request 
     AJAX Response 
     AJAX XML File 
     AJAX PHP 
     AJAX ASP 
     AJAX Database 
     AJAX Applications 
     AJAX Examples 
      
     JS JSON 
     JSON Intro 
     JSON Syntax 
     JSON vs XML 
     JSON Data Types 
     JSON Parse 
     JSON Stringify 
     JSON Objects 
     JSON Arrays 
     JSON PHP 
     JSON HTML 
     JSON JSONP 
      
     JS vs jQuery 
     jQuery Selectors 
     jQuery HTML 
     jQuery CSS 
     jQuery DOM 
      
     JS Examples 
     JS Examples 
     JS HTML DOM 
     JS HTML Input 
     JS HTML Objects 
     JS HTML Events 
     JS Browser 
     JS Exercises 
     JS Quiz 
     JS Certificate 
      
     JS References 
     JavaScript Objects 
     HTML DOM Objects 
      
     
      
     
    
   
   
    
     
      
       
       
       
       
      
     JavaScript Bitwise Operations 
      
      ? Previous 
      Next ? 
      
      
     JavaScript Bitwise Operators 
      
      
        
        Operator 
        Name 
        Description 
        
        
        & 
        AND 
        Sets each bit to 1 if both bits are 1 
        
        
        | 
        OR 
        Sets each bit to 1 if one of two bits is 1 
        
        
        ^ 
        XOR 
        Sets each bit to 1 if only one of two bits is 1 
        
        
        ~ 
        NOT 
        Inverts all the bits 
        
        
        << 
        Zero fill left shift 
        Shifts left by pushing zeros in from the right and let the leftmost bits fall off 
        
        
        >> 
        Signed right shift 
        Shifts right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off 
        
        
        >>> 
        Zero fill right shift 
        Shifts right by pushing zeros in from the left, and let the rightmost bits fall off 
        
      
      
     Examples 
      
       
       
         
         Operation 
         Result 
         Same as 
         Result 
         
         
         5 & 1 
         1 
         0101 & 0001 
          0001 
         
         
         5 | 1 
         5 
         0101 | 0001 
          0101 
         
         
         ~ 5 
         10 
          ~0101 
          1010 
         
         
         5 << 1 
         10 
         0101 << 1 
          1010 
         
         
         5 ^ 1 
         4 
         0101 ^ 0001 
          0100 
         
         
         5 >> 1 
         2 
         0101 >> 1 
          0010 
         
         
         5 >>> 1 
         2 
         0101 >>> 1 
          0010 
         
       
       
      
      
     JavaScript Uses 32 bits Bitwise Operands 
     JavaScript stores numbers as 64 bits floating point numbers, but all bitwise operations are performed on 32 bits binary numbers.  
     Before a bitwise operation is performed, JavaScript converts numbers to 32 bits signed integers. 
     After the bitwise operation is performed, the result is converted back to 64 bits JavaScript numbers. 
      
      The examples above uses 4 bits unsigned binary numbers. Because of this ~ 5 returns 10. 
      Since JavaScript uses 32 bits signed integers, it will not return 10. It will return -6. 
      00000000000000000000000000000101 (5) 
      11111111111111111111111111111010 (~5 = -6) 
      A signed integer uses the leftmost bit as the minus sign. 
      
      
      
       
       
       
      
      
     Bitwise AND 
     When a bitwise AND is performed on a pair of bits, it returns 1 if both bits are 1. 
      
      
        One bit example: 
        
        
         
          Operation
          Result
          
         
          0 & 0
          0
          
         
          0 & 1
          0
          
         
          1 & 0
          0
          
         
          1 & 1
          1
          
        
        
       
      
        4 bits example: 
        
        
         
          Operation
          Result
          
         
          1111 & 0000
          0000
          
         
          1111 & 0001
          0001
          
         
          1111 & 0010
          0010
          
         
          1111 & 0100
          0100
          
        
        
       
      
      
     Bitwise OR 
     When a bitwise OR is performed on a pair of bits, it returns 1 if one of the bits are 1: 
      
      
        One bit example: 
        
        
         
          Operation
          Result
          
         
          0 | 0
          0
          
         
          0 | 1
          1 
          
         
          1 | 0
          1
          
         
          1 | 1
          1
          
        
        
       
      
        4 bits example: 
        
        
         
          Operation
          Result
          
         
          1111 | 0000
          1111
          
         
          1111 | 0001
          1111
          
         
          1111 | 0010
          1111
          
         
          1111 | 0100
          1111
          
        
        
       
      
      
     Bitwise XOR 
     When a bitwise XOR is performed on a pair of bits, it returns 1 if the bits are different: 
      
      
        One bit example: 
        
        
         
          Operation
          Result
          
         
          0 ^ 0
          0
          
         
          0 ^ 1
          1 
          
         
          1 ^ 0
          1
          
         
          1 ^ 1
          0 
          
        
        
       
      
        4 bits example: 
        
        
         
          Operation
          Result
          
         
          1111 ^ 0000
          1111
          
         
          1111 ^ 0001
          1110
          
         
          1111 ^ 0010
          1101
          
         
          1111 ^ 0100
          1011
          
        
        
       
      
      
     JavaScript Bitwise AND (&) 
     Bitwise AND returns 1 only if both bits are 1: 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        1
        00000000000000000000000000000001
        
       
        5 & 1
        00000000000000000000000000000001 (1)
        
      
      
      
      Example 
      
        var x = 5 & 1; 
       
      Try it Yourself ? 
      
      
     JavaScript Bitwise OR (|) 
     Bitwise OR returns 1 if one of the bits are 1: 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        1
        00000000000000000000000000000001
        
       
        5 | 1
        00000000000000000000000000000101 (5)
        
      
      
      
      Example 
      
        var x = 5 | 1; 
       
      Try it Yourself ? 
      
      
     JavaScript Bitwise XOR (^) 
     Bitwise XOR returns 1 if the bits are different: 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        1
        00000000000000000000000000000001
        
       
        5 ^ 1
        00000000000000000000000000000100 (4)
        
      
      
      
      Example 
      
        var x = 5 ^ 1; 
       
      Try it Yourself ? 
      
      
     JavaScript Bitwise NOT (~) 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        ~5
        11111111111111111111111111111010 (-6)
        
      
      
      
      Example 
      
        var x = ~5; 
       
      Try it Yourself ? 
      
      
     JavaScript (Zero Fill) Bitwise Left Shift (<<) 
     This is a zero fill left shift. One or more zero bits are pushed in from the right, and the leftmost bits fall off: 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        5 << 1
        00000000000000000000000000001010 (10)
        
      
      
      
      Example 
      
        var x = 5 << 1; 
       
      Try it Yourself ? 
      
      
     JavaScript (Sign Preserving) Bitwise Right Shift (>>) 
     This is a sign preserving right shift. Copies of the leftmost bit are pushed in from the left, and the rightmost bits fall off: 
      
      
       
        Decimal
        Binary
        
       
        -5
        11111111111111111111111111111011
        
       
        -5 >> 1
        11111111111111111111111111111101 (-3)
        
      
      
      
      Example 
      
        var x = -5 >> 1; 
       
      Try it Yourself ? 
      
      
     JavaScript (Zero Fill) Right Shift (>>>) 
     This is a zero fill right shift. One or more zero bits are pushed in from the left, and the rightmost bits fall off: 
      
      
       
        Decimal
        Binary
        
       
        5
        00000000000000000000000000000101
        
       
        5 >>> 1
        00000000000000000000000000000010 (2)
        
      
      
      
      Example 
      
        var x = 5 >>> 1; 
       
      Try it Yourself ? 
      
      
     Binary Numbers 
     Binary numbers with only one bit set is easy to understand: 
      
      
       
        Binary Representation
        Decimal value
        
       
        00000000000000000000000000000001
        1
        
       
        00000000000000000000000000000010
        2
        
       
        00000000000000000000000000000100
        4
        
       
        00000000000000000000000000001000
        8
        
       
        00000000000000000000000000010000
        16
        
       
        00000000000000000000000000100000
        32
        
       
        00000000000000000000000001000000
        64
        
      
      
     Setting a few more bits reveals the binary pattern: 
      
      
       
        Binary Representation
        Decimal value
        
       
        00000000000000000000000000000101
        5 (4 + 1)
        
       
        00000000000000000000000000001101
        13 (8 + 4 + 1)
        
       
        00000000000000000000000000101101
        45 (32 + 8 + 4 + 1)
        
      
      
     JavaScript binary numbers are stored in two's complement format. 
     This means that a negative number is the bitwise NOT of the number plus 1: 
      
      
       
        Binary Representation
        Decimal value
        
       
        00000000000000000000000000000101
        5
        
       
        11111111111111111111111111111011
        -5
        
       
        00000000000000000000000000000110
        6
        
       
        11111111111111111111111111111010
        -6
        
       
        00000000000000000000000000101000
        40
        
       
        11111111111111111111111111011000
        -40
        
      
      
      
     Converting Decimal to Binary 
      
      Example 
      
        function dec2bin(dec){
          return (dec >>> 0).toString(2);
        } 
       
      Try it Yourself ? 
      
      
     Converting Binary to Decimal 
      
      Example 
      
        function bin2dec(bin){
          return parseInt(bin, 2).toString(10);
        } 
       
      Try it Yourself ? 
      
      
      
      ? Previous 
      Next ? 
      
     
     
      
       
        
        
        
       
      
      
      COLOR PICKER 
        
      
      
      
      
      
       
       HOW TO 
       
       
       Tabs
        
       Dropdowns
        
       Accordions
        
       Side Navigation
        
       Top Navigation
        
       Modal Boxes
        
       Progress Bars
        
       Parallax
        
       Login Form
        
       HTML Includes
        
       Google Maps
        
       Range Sliders
        
       Tooltips
        
       Slideshow
        
       Filter List
        
       Sort List
        
       
      
      
      SHARE 
       
        
       
        
         
        
         
        
       
      
      
      CERTIFICATES 
       HTML CSS JavaScript SQL Python PHP jQuery Bootstrap XML 
       Read More ? 
      
      
       
        
         
         
         
        
       
      
      
     
    
    
     
     
      
       
       
       
       
       
       
       
      
     
     
     
      
      REPORT ERROR 
      
      
      PRINT PAGE 
      
      
      FORUM 
      
      
      ABOUT 
      
     
     
     
     ? 
     Your Suggestion: 
      
       
       Your E-mail: 
        
       
       
       Page address: 
        
       
       
       Description: 
        
       
       
       Submit 
       
       
      
     
     
     ? 
     Thank You For Helping Us! 
     Your message has been sent to W3Schools. 
     
     
      
       
       Top Tutorials 
       HTML Tutorial
        
       CSS Tutorial
        
       JavaScript Tutorial
        
       How To Tutorial
        
       SQL Tutorial
        
       Python Tutorial
        
       W3.CSS Tutorial
        
       Bootstrap Tutorial
        
       PHP Tutorial
        
       jQuery Tutorial
        
       Java Tutorial
        
       C++ Tutorial
        
       
      
      
       
       Top References 
       HTML Reference
        
       CSS Reference
        
       JavaScript Reference
        
       SQL Reference
        
       Python Reference
        
       W3.CSS Reference
        
       Bootstrap Reference
        
       PHP Reference
        
       HTML Colors
        
       jQuery Reference
        
       Java Reference
        
       Angular Reference
        
       
      
      
       
       Top Examples 
       HTML Examples
        
       CSS Examples
        
       JavaScript Examples
        
       How To Examples
        
       SQL Examples
        
       Python Examples
        
       W3.CSS Examples
        
       Bootstrap Examples
        
       PHP Examples
        
       jQuery Examples
        
       Java Examples
        
       XML Examples
        
       
      
      
       
       Web Certificates 
       HTML Certificate
        
       CSS Certificate
        
       JavaScript Certificate
        
       SQL Certificate
        
       Python Certificate
        
       jQuery Certificate
        
       PHP Certificate
        
       Bootstrap Certificate
        
       XML Certificate
        
        Get Certified ? 
       
      
     
     
    
      W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our 
     terms of use, 
     cookie and privacy policy. 
     Copyright 1999-2019 by Refsnes Data. All Rights Reserved.
      
     Powered by W3.CSS.
     
      
       
     
    
     
    
   
   
   
     
 


