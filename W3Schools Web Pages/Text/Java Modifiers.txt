 
  Java Modifiers 
   
   
   
   
   
   
   
  
   
   
   
   
   
   
   
   
   
   
  
  
   
   w3schools.com 
   
    THE WORLD'S LARGEST WEB DEVELOPER SITE
    
   
   
    
   
   
   
    
     
      
      
     HTML 
     CSS 
     JAVASCRIPT 
     SQL 
     PYTHON 
     PHP 
     BOOTSTRAP 
     HOW TO 
     W3.CSS 
     JQUERY 
     XML 
     MORE  
     ? 
     ? 
     ? 
     FORUM 
     EXERCISES  
     REFERENCES  
     
     
     ? 
      
       
       HTML and CSS 
       Learn HTML 
       Learn CSS 
       Learn Bootstrap 
       Learn W3.CSS 
       Learn Colors 
       Learn Icons 
       Learn Graphics 
       Learn SVG 
       Learn Canvas 
       Learn How To 
       Learn Sass 
        
        XML 
        Learn XML 
        Learn XML AJAX 
        Learn XML DOM 
        Learn XML DTD 
        Learn XML Schema 
        Learn XSLT 
        Learn XPath 
        Learn XQuery 
        
       
       
       JavaScript 
       Learn JavaScript 
       Learn jQuery 
       Learn React 
       Learn AngularJS 
       Learn JSON 
       Learn AJAX 
       Learn W3.JS 
       Programming 
       Learn Python 
       Learn Java 
       Learn C++ 
       Learn C# 
       
        
        
        
       
       
       Server Side 
       Learn SQL 
       Learn PHP 
       Learn ASP 
       Learn Node.js 
       Learn Raspberry Pi 
       Web Building 
       Web Templates 
       Web Statistics 
       Web Certificates 
       Web Editor 
       Web Development 
       
       
       XML 
       Learn XML 
       Learn XML AJAX 
       Learn XML DOM 
       Learn XML DTD 
       Learn XML Schema 
       Learn XSLT 
       Learn XPath 
       Learn XQuery 
       
      
      
     
     
     ? 
      
       
       HTML 
       HTML Tag Reference 
       HTML Event Reference 
       HTML Color Reference 
       HTML Attribute Reference 
       HTML Canvas Reference 
       HTML SVG Reference 
       HTML Character Sets 
       Google Maps Reference 
       CSS 
       CSS Reference 
       CSS Browser Support 
       CSS Selector Reference 
       Bootstrap 3 Reference 
       Bootstrap 4 Reference 
       W3.CSS Reference 
       Icon Reference 
       Sass Reference 
       
       
       JavaScript 
       JavaScript Reference 
       HTML DOM Reference 
       jQuery Reference 
       AngularJS Reference 
       W3.JS Reference 
       Programming 
       Python Reference 
       Java Reference 
       
       
       Server Side 
       SQL Reference 
       PHP Reference 
       ASP Reference 
       XML 
       XML Reference 
       XML Http Reference 
       XSLT Reference 
       XML Schema Reference 
       
       
       Character Sets 
       HTML Character Sets 
       HTML ASCII 
       HTML ANSI 
       HTML Windows-1252 
       HTML ISO-8859-1 
       HTML Symbols 
       HTML UTF-8 
       
      
      
     
     
     ? 
      
       
       Exercises 
       HTML Exercises 
       CSS Exercises 
       JavaScript Exercises 
       SQL Exercises 
       PHP Exercises 
       Python Exercises 
       jQuery Exercises 
       Bootstrap Exercises 
       Java Exercises 
       C++ Exercises 
       C# Exercises 
       
       
       Quizzes 
       HTML Quiz 
       CSS Quiz 
       JavaScript Quiz 
       SQL Quiz 
       PHP Quiz 
       Python Quiz 
       jQuery Quiz 
       Bootstrap Quiz 
       XML Quiz 
       
       
       Certificates 
       HTML Certificate 
       CSS Certificate 
       JavaScript Certificate 
       SQL Certificate 
       PHP Certificate 
       Python Certificate 
       jQuery Certificate 
       Bootstrap Certificate 
       XML Certificate 
       
      
      
     
    
   
   
    
     
      
     Java Tutorial 
     Java HOME 
     Java Intro 
     Java Get Started 
     Java Syntax 
     Java Comments 
     Java Variables 
     Java Data Types 
     Java Type Casting 
     Java Operators 
     Java Strings 
     Java Math 
     Java Booleans 
     Java If...Else 
     Java Switch 
     Java While Loop 
     Java For Loop 
     Java Break/Continue 
     Java Arrays 
      
     Java Methods 
     Java Methods 
     Java Method Parameters 
     Java Method Overloading 
      
     Java Classes 
     Java OOP 
     Java Classes/Objects 
     Java Class Attributes 
     Java Class Methods 
     Java Constructors 
     Java Modifiers 
     Java Encapsulation 
     Java Packages / API 
     Java Inheritance 
     Java Polymorphism 
     Java Inner Classes 
     Java Abstraction 
     Java Interface 
     Java Enums 
     Java User Input 
     Java Date 
     Java ArrayList 
     Java HashMap 
     Java Wrapper Classes 
     Java Exceptions 
      
     Java File Handling 
     Java Files 
     Java Create/Write Files 
     Java Read Files 
     Java Delete Files 
      
     Java Reference 
     Java Keywords 
      
      abstract 
      boolean 
      break 
      byte 
      case 
      catch 
      char 
      class 
      continue 
      default 
      do 
      double 
      else 
      enum 
      extends 
      final 
      finally 
      float 
      for 
      if 
      implements 
      import 
      instanceof 
      int 
      interface 
      long 
      new 
      package 
      private 
      protected 
      public 
      return 
      short 
      static 
      super 
      switch 
      this 
      throw 
      throws 
      try 
      void 
      while 
      
     Java String Methods 
     Java Math Methods 
      
     Java Examples 
     Java Examples 
     Java Exercises 
      
     
      
     
    
   
   
    
     
      
       
       
       
       
      
     Java Modifiers 
      
      ? Previous 
      Next ? 
      
      
     Modifiers 
     By now, you are quite familiar with the public keyword that appears in almost all of our examples: 
      
      public class MyClass
 
      
     The public keyword is an access modifier, meaning that it is used to set the access level for classes, attributes, methods and constructors. 
     We divide modifiers into two groups: 
      
      Access Modifiers - controls the access level 
      Non-Access Modifiers - do not control access level, but provides other functionality 
      
      
     Access Modifiers 
     For classes, you can use either public or default: 
      
       
        
         
         Modifier 
         Description 
         Try it 
         
         
         public 
         The class is accessible by any other class 
         Try it ? 
         
         
         default 
         The class is only accessible by classes in the same package. This is used when you don't specify a modifier. You will learn more about packages in the Packages chapter 
         Try it ? 
         
        
       
      
     For attributes, methods and constructors, you can use the one of the following: 
      
       
        
         
         Modifier 
         Description 
         Try it 
         
         
         public 
         The code is accessible for all classes 
         Try it ? 
         
         
         private 
         The code is only accessible within the declared class 
         Try it ? 
         
         
         default 
         The code is only accessible in the same package. This is used when you don't specify a modifier. You will learn more about packages in the Packages chapter 
         Try it ? 
         
         
         protected 
         The code is accessible in the same package and subclasses. You will learn more about subclasses and superclasses in the Inheritance chapter 
         Try it ? 
         
        
       
      
      
      
     Non-Access Modifiers 
     For classes, you can use either final or abstract: 
      
       
        
         
         Modifier 
         Description 
         Try it 
         
         
         final 
         The class cannot be inherited by other classes (You will learn more about inheritance in the Inheritance chapter) 
         Try it ? 
         
         
         abstract 
         The class cannot be used to create objects (To access an abstract class, it must be inherited from another class. You will learn more about inheritance and abstraction in the Inheritance and Abstraction chapters) 
         Try it ? 
         
        
       
      
     For attributes and methods, you can use the one of the following: 
      
       
        
         
         Modifier 
         Description 
         
         
         final 
         Attributes and methods cannot be overridden/modified 
         
         
         static 
         Attributes and methods belongs to the class, rather than an object 
         
         
         abstract 
         Can only be used in an abstract class, and can only be used on methods. The method does not have a body, for example abstract void run();. The body is provided by the subclass (inherited from). You will learn more about inheritance and abstraction in the Inheritance and Abstraction chapters 
         
         
         transient 
         Attributes and methods are skipped when serializing the object containing them 
         
         
         synchronized 
         Methods can only be accessed by one thread at a time 
         
         
         volatile 
         The value of an attribute is not cached thread-locally, and is always read from the "main memory" 
         
        
       
      
      
      
       
       
       
      
      
     Final 
     If you don't want the ability to override existing attribute values, declare attributes as final: 
      
      Example 
      public class MyClass {
  final int x = 10;
  final double PI = 3.14;

  public static void main(String[] args) {
    MyClass myObj = new MyClass();
    myObj.x = 50; // will generate an error: cannot assign a value to a final variable
    myObj.PI = 25; // will generate an error: cannot assign a value to a final variable
    System.out.println(myObj.x);
  }
}
 
       Run example ?  
      
      
     Static 
     A static method means that it can be accessed without creating an object of the class, unlike public: 
      
      Example 
      An example to demonstrate the differences between static and public methods: 
      public class MyClass {
  // Static method
  static void myStaticMethod() {
    System.out.println("Static methods can be called without creating objects");
  }

  // Public method
  public void myPublicMethod() {
    System.out.println("Public methods must be called by creating objects");
  }

  // Main method
  public static void main(String[ ] args) {
    myStaticMethod(); // Call the static method
    // myPublicMethod(); This would output an error

    MyClass myObj = new MyClass(); // Create an object of MyClass
    myObj.myPublicMethod(); // Call the public method
  }
}
 
       Run example ?  
      
      
     Abstract 
     An abstract method belongs to an abstract class, and it does not have a body. The body is provided by the subclass: 
      
      Example 
      // Code from filename: Person.java
// abstract classabstract class Person {
  public String fname = "John";
  public int age = 24;
  public abstract void study(); // abstract method
}

// Subclass (inherit from Person)
class Student extends Person {
  public int graduationYear = 2018;
  public void study() { // the body of the abstract method is provided here
    System.out.println("Studying all day long");
  }
}
// End code from filename: Person.java

// Code from filename: MyClass.java
class MyClass {
  public static void main(String[] args) {
    // create an object of the Student class (which inherits attributes and methods from Person)
    Student myObj = new Student();

    System.out.println("Name: " + myObj.fname);
    System.out.println("Age: " + myObj.age);
    System.out.println("Graduation Year: " + myObj.graduationYear);
    myObj.study(); // call abstract method  }
}
 
       Run example ?  
      
      
      
      ? Previous 
      Next ? 
      
     
     
      
       
        
        
        
       
      
      
      COLOR PICKER 
        
      
      
      
      
      
       
       HOW TO 
       
       
       Tabs
        
       Dropdowns
        
       Accordions
        
       Side Navigation
        
       Top Navigation
        
       Modal Boxes
        
       Progress Bars
        
       Parallax
        
       Login Form
        
       HTML Includes
        
       Google Maps
        
       Range Sliders
        
       Tooltips
        
       Slideshow
        
       Filter List
        
       Sort List
        
       
      
      
      SHARE 
       
        
       
        
         
        
         
        
       
      
      
      CERTIFICATES 
       HTML CSS JavaScript SQL Python PHP jQuery Bootstrap XML 
       Read More ? 
      
      
       
        
         
         
         
        
       
      
      
     
    
    
     
     
      
       
       
       
       
       
       
       
      
     
     
     
      
      REPORT ERROR 
      
      
      PRINT PAGE 
      
      
      FORUM 
      
      
      ABOUT 
      
     
     
     
     ? 
     Your Suggestion: 
      
       
       Your E-mail: 
        
       
       
       Page address: 
        
       
       
       Description: 
        
       
       
       Submit 
       
       
      
     
     
     ? 
     Thank You For Helping Us! 
     Your message has been sent to W3Schools. 
     
     
      
       
       Top Tutorials 
       HTML Tutorial
        
       CSS Tutorial
        
       JavaScript Tutorial
        
       How To Tutorial
        
       SQL Tutorial
        
       Python Tutorial
        
       W3.CSS Tutorial
        
       Bootstrap Tutorial
        
       PHP Tutorial
        
       jQuery Tutorial
        
       Java Tutorial
        
       C++ Tutorial
        
       
      
      
       
       Top References 
       HTML Reference
        
       CSS Reference
        
       JavaScript Reference
        
       SQL Reference
        
       Python Reference
        
       W3.CSS Reference
        
       Bootstrap Reference
        
       PHP Reference
        
       HTML Colors
        
       jQuery Reference
        
       Java Reference
        
       Angular Reference
        
       
      
      
       
       Top Examples 
       HTML Examples
        
       CSS Examples
        
       JavaScript Examples
        
       How To Examples
        
       SQL Examples
        
       Python Examples
        
       W3.CSS Examples
        
       Bootstrap Examples
        
       PHP Examples
        
       jQuery Examples
        
       Java Examples
        
       XML Examples
        
       
      
      
       
       Web Certificates 
       HTML Certificate
        
       CSS Certificate
        
       JavaScript Certificate
        
       SQL Certificate
        
       Python Certificate
        
       jQuery Certificate
        
       PHP Certificate
        
       Bootstrap Certificate
        
       XML Certificate
        
        Get Certified ? 
       
      
     
     
    
      W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our 
     terms of use, 
     cookie and privacy policy. 
     Copyright 1999-2019 by Refsnes Data. All Rights Reserved.
      
     Powered by W3.CSS.
     
      
       
     
    
     
    
   
   
   
    
 


